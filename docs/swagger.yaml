definitions:
  model.Bid:
    properties:
      comments:
        type: string
      contractor_id:
        type: integer
      created_at:
        type: string
      delivery_time:
        type: integer
      id:
        type: string
      price:
        type: number
      status:
        type: string
      tender_id:
        type: integer
      updated_at:
        type: string
    type: object
  model.CreateBid:
    properties:
      comments:
        type: string
      delivery_time:
        type: integer
      price:
        type: number
    type: object
  model.CreateTender:
    properties:
      attachment:
        type: string
      budget:
        type: number
      deadline:
        type: string
      description:
        type: string
      title:
        type: string
    required:
    - budget
    - deadline
    - description
    - title
    type: object
  model.LoginModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.RegisterModel:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  model.Tender:
    properties:
      attachment:
        type: string
      budget:
        type: number
      client_id:
        type: integer
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.UpdateBid:
    properties:
      status:
        type: string
    type: object
  model.UpdateTenderStatusRequest:
    properties:
      status:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Tender Managment Swagger
paths:
  /api/client/tenders:
    get:
      description: Retrieves a list of tenders for a specific client
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tender'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: List all tenders for a client
      tags:
      - Tender
    post:
      consumes:
      - application/json
      description: Creates a new tender with provided details
      parameters:
      - description: Tender details
        in: body
        name: tender
        required: true
        schema:
          $ref: '#/definitions/model.CreateTender'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tender'
        "400":
          description: Invalid input or tender data
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create a new tender
      tags:
      - Tender
  /api/client/tenders/{id}:
    delete:
      description: Deletes a tender by ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Tender deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid tender ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Tender not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Delete a tender
      tags:
      - Tender
    put:
      consumes:
      - application/json
      description: Updates the status of a tender by ID
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: integer
      - description: New tender status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/model.UpdateTenderStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tender status updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or tender status
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Tender not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Update the status of a tender
      tags:
      - Tender
  /api/client/tenders/{id}/award/{bidId}:
    post:
      consumes:
      - application/json
      description: Award a specific bid for a tender, indicating it has been selected
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bid ID
        in: path
        name: bidId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bid awarded successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid tender or bid ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Bid or tender not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Award a bid for a tender
      tags:
      - bids
  /api/client/tenders/{id}/bids:
    get:
      consumes:
      - application/json
      description: Retrieve all bids for a given tender, with optional filtering and
        sorting
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Filter bids by price
        in: query
        name: price
        type: number
      - description: Filter bids by delivery time
        in: query
        name: delivery_time
        type: string
      - description: Sort by 'price' or 'delivery_time'
        in: query
        name: sort_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/model.Bid'
            type: array
        "400":
          description: Invalid tender ID or query parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Access denied
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No bids found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get all bids for a tender
      tags:
      - bids
  /api/contractor/bids:
    get:
      consumes:
      - application/json
      description: Retrieve all bids submitted by a specific contractor
      produces:
      - application/json
      responses:
        "200":
          description: List of bids
          schema:
            items:
              $ref: '#/definitions/model.Bid'
            type: array
        "500":
          description: Failed to fetch bids
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get all bids by a contractor
      tags:
      - bids
  /api/contractor/bids/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific bid by ID
      parameters:
      - description: Bid ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bid deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid bid ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Bid not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Delete a bid
      tags:
      - bids
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific bid
      parameters:
      - description: Bid ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bid details
          schema:
            $ref: '#/definitions/model.Bid'
        "400":
          description: Invalid bid ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Bid not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Get bid details by bid ID
      tags:
      - bids
    put:
      consumes:
      - application/json
      description: Update the status of an existing bid (e.g., accepted, rejected)
      parameters:
      - description: Bid ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update bid request body
        in: body
        name: updateData
        required: true
        schema:
          $ref: '#/definitions/model.UpdateBid'
      produces:
      - application/json
      responses:
        "200":
          description: Bid status updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid bid ID or request data
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Bid not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update bid status
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Update the status of a bid
      tags:
      - bids
  /api/contractor/tenders/{id}/bid:
    post:
      consumes:
      - application/json
      description: Create a bid for a given tender with the specified price, delivery
        time, and comments
      parameters:
      - description: Tender ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bid Information (e.g., { \
        in: body
        name: bid
        required: true
        schema:
          $ref: '#/definitions/model.CreateBid'
      produces:
      - application/json
      responses:
        "201":
          description: Details of the created bid
          schema:
            $ref: '#/definitions/model.Bid'
        "400":
          description: Invalid tender ID or request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create a bid for a tender
      tags:
      - bids
  /api/users/{id}/bids:
    get:
      description: Retrieves a list of bids placed by a specific contractor
      parameters:
      - description: Contractor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of bids placed by the contractor
          schema:
            items:
              $ref: '#/definitions/model.Bid'
            type: array
        "400":
          description: Invalid contractor ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No bids found for the contractor
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Retrieve Contractor's Bid History
      tags:
      - User
  /api/users/{id}/tenders:
    get:
      description: Retrieves a list of tenders posted by a specific client
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of tenders posted by the client
          schema:
            items:
              $ref: '#/definitions/model.Tender'
            type: array
        "400":
          description: Invalid client ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No tenders found for the client
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Retrieve Client's Tender History
      tags:
      - User
  /api/users/notification/ws:
    get:
      consumes:
      - application/json
      description: Allows users to receive real-time notifications via WebSocket connection.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully connected to WebSocket.
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - Bearer: []
      summary: Try to using it by postman it is not work on swagger
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns an authentication token
      parameters:
      - description: User Login Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.LoginModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login an existing user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns an authentication token
      parameters:
      - description: User Registration Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
